C51 COMPILER V9.60.7.0   MAIN                                                              04/22/2023 20:55:47 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\instal\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "config.h"
   2          #include "GPIO.h"
   3          #include "UART.h"
   4          #include "delay.h"
   5          #include <stdio.h>
   6          #include "MatrixKeys.h"
   7          
   8          char putchar(char dat)
   9          {
  10   1          TX1_write2buff(dat);
  11   1          return dat;
  12   1      }
  13          
  14          // GPIO初始化
  15          void GPIO_config(void)
  16          {
  17   1          GPIO_InitTypeDef GPIO_InitStructure; // 结构定义
  18   1          // P34 P35
  19   1          GPIO_InitStructure.Mode = GPIO_PullUp;            // IO模式，GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_O
             -UT_PP
  20   1          GPIO_InitStructure.Pin = GPIO_Pin_4 | GPIO_Pin_5; // 指定要初始化的IO
  21   1          GPIO_Inilize(GPIO_P3, &GPIO_InitStructure);       // 初始化
  22   1          // P40 P41
  23   1          GPIO_InitStructure.Mode = GPIO_PullUp;            // IO模式，GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_O
             -UT_PP
  24   1          GPIO_InitStructure.Pin = GPIO_Pin_0 | GPIO_Pin_1; // 指定要初始化的IO
  25   1          GPIO_Inilize(GPIO_P4, &GPIO_InitStructure);       // 初始化
  26   1          // P03 P06 P07
  27   1          GPIO_InitStructure.Mode = GPIO_PullUp;                         // IO模式，GPIO_PullUp,GPIO_HighZ,GPIO_
             -OUT_OD,GPIO_OUT_PP
  28   1          GPIO_InitStructure.Pin = GPIO_Pin_3 | GPIO_Pin_6 | GPIO_Pin_7; // 指定要初始化的IO
  29   1          GPIO_Inilize(GPIO_P0, &GPIO_InitStructure);                    // 初始化
  30   1          // P17
  31   1          GPIO_InitStructure.Mode = GPIO_PullUp;      // IO模式，GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_OUT_PP
  32   1          GPIO_InitStructure.Pin = GPIO_Pin_7;        // 指定要初始化的IO
  33   1          GPIO_Inilize(GPIO_P1, &GPIO_InitStructure); // 初始化
  34   1      }
  35          
  36          // UART初始化
  37          void UART_config(void)
  38          {
  39   1          COMx_InitDefine COMx_InitStructure;              // 结构定义
  40   1          COMx_InitStructure.UART_Mode = UART_8bit_BRTx;   // 模式, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,UAR
             -T_9bit_BRTx
  41   1          COMx_InitStructure.UART_BRT_Use = BRT_Timer1;    // 选择波特率发生器, BRT_Timer1, BRT_Timer2 (注意: 串
             -口2固定使用BRT_Timer2)
  42   1          COMx_InitStructure.UART_BaudRate = 115200ul;     // 波特率, 一般 110 ~ 115200
  43   1          COMx_InitStructure.UART_RxEnable = ENABLE;       // 接收允许,   ENABLE或DISABLE
  44   1          COMx_InitStructure.BaudRateDouble = DISABLE;     // 波特率加倍, ENABLE或DISABLE
  45   1          COMx_InitStructure.UART_Interrupt = ENABLE;      // 中断允许,   ENABLE或DISABLE
  46   1          COMx_InitStructure.UART_Priority = Priority_0;   // 指定中断优先级(低到高) Priority_0,Priority_1,Prior
             -ity_2,Priority_3
  47   1          COMx_InitStructure.UART_P_SW = UART1_SW_P30_P31; // 切换端口,   UART1_SW_P30_P31,UART1_SW_P36_P37,UART
             -1_SW_P16_P17,UART1_SW_P43_P44
C51 COMPILER V9.60.7.0   MAIN                                                              04/22/2023 20:55:47 PAGE 2   

  48   1          UART_Configuration(UART1, &COMx_InitStructure);  // 初始化串口1 UART1,UART2,UART3,UART4
  49   1      }
  50          
  51          void MK_on_keyup(u8 row, u8 col)
  52          {
  53   1          printf("Up %d行 %d列\r\n", (int)row, (int)col); // 按钮抬起电平为高
  54   1      }
  55          
  56          void MK_on_keydown(u8 row, u8 col)
  57          {
  58   1          printf("Down %d行 %d列\r\n", (int)row, (int)col); // 按钮按下电平为低
  59   1      }
  60          
  61          int main()
  62          {
  63   1          u16 state;
  64   1          GPIO_config();
  65   1          UART_config();
  66   1          MK_init();
  67   1          EA = 1;
  68   1          while (1)
  69   1          {
  70   2              delay_ms(20);
  71   2              MK_scan(&state);
  72   2          }
  73   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    217    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----      17
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
