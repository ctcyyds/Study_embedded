C51 COMPILER V9.60.7.0   MATRIXKEYS                                                        04/28/2023 20:58:28 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MATRIXKEYS
OBJECT MODULE PLACED IN .\Objects\MatrixKeys.obj
COMPILER INVOKED BY: D:\instal\Keil_v5\C51\BIN\C51.EXE Driver\MatrixKeys.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Lib;.\Drive
                    -r) DEBUG OBJECTEXTEND PRINT(.\Listings\MatrixKeys.lst) TABS(2) OBJECT(.\Objects\MatrixKeys.obj)

line level    source

   1          #include "MatrixKeys.h"
   2          
   3          // 定义状态记录，记录所有的
   4          static u16 key_state = 0xFFFF;
   5          
   6          //======================================================================================
   7          //(row * ROW_NUM) + col = idx(按钮下标)
   8          // 定义前一次状态为抬起
   9          #define IS_KEY_UP(row, col) ((key_state >> (row * ROW_NUM + col)) & 0x01) == KEY_UP
  10          // 定义前一次状态为按下
  11          #define IS_KEY_DOWN(row, col) ((key_state >> (row * ROW_NUM + col)) & 0x01) == KEY_DOWN
  12          //======================================================================================
  13          
  14          //======================================================================================
  15          // 记录状态Plus
  16          #define SET_KEY_UP(row, col) key_state |= (1 << (row * ROW_NUM + col))
  17          #define SET_KEY_DOWN(row, col) key_state &= ~(1 << (row * ROW_NUM + col))
  18          //======================================================================================
  19          
  20          //======================================================================================
  21          // 判断第几列
  22          static u8 COL_STATE(u8 col)
  23          {
  24   1        if (col == 0)
  25   1          return COL1;
  26   1        if (col == 1)
  27   1          return COL2;
  28   1        if (col == 2)
  29   1          return COL3;
  30   1        if (col == 3)
  31   1          return COL4;
  32   1        return COL1;
  33   1      }
  34          // 判断哪一行输出
  35          static void ROW_OUT(u8 row)
  36          {
  37   1        if (row == 0)
  38   1        {
  39   2          ROW1 = 0;
  40   2          ROW2 = 1;
  41   2          ROW3 = 1;
  42   2          ROW4 = 1;
  43   2        }
  44   1        if (row == 1)
  45   1        {
  46   2          ROW1 = 1;
  47   2          ROW2 = 0;
  48   2          ROW3 = 1;
  49   2          ROW4 = 1;
  50   2        }
  51   1        if (row == 2)
  52   1        {
  53   2          ROW1 = 1;
  54   2          ROW2 = 1;
C51 COMPILER V9.60.7.0   MATRIXKEYS                                                        04/28/2023 20:58:28 PAGE 2   

  55   2          ROW3 = 0;
  56   2          ROW4 = 1;
  57   2        }
  58   1        if (row == 3)
  59   1        {
  60   2          ROW1 = 1;
  61   2          ROW2 = 1;
  62   2          ROW3 = 1;
  63   2          ROW4 = 0;
  64   2        }
  65   1      }
  66          //======================================================================================
  67          
  68          void MK_init()
  69          {
  70   1        KEYS_PIN_INIT();
  71   1      }
  72          void MK_scan(u16 *state)
  73          {
  74   1        u8 i, j;
  75   1        // j : row; i : col;
  76   1        for (j = 0; j < ROW_NUM; j++)
  77   1        {
  78   2          ROW_OUT(j);
  79   2          for (i = 0; i < COL_NUM; i++)
  80   2          {
  81   3            if (COL_STATE(i) == KEY_DOWN && IS_KEY_UP(j, i))
  82   3            {
  83   4              MK_on_keydown(j, i); // 按钮按下电平为低
  84   4              SET_KEY_DOWN(j, i);
  85   4            }
  86   3            else if (COL_STATE(i) == KEY_UP && IS_KEY_DOWN(j, i))
  87   3            {
  88   4              MK_on_keyup(j, i); // 按钮抬起电平为高
  89   4              SET_KEY_UP(j, i);
  90   4            }
  91   3          }
  92   2        }
  93   1      }
*** WARNING C280 IN LINE 72 OF Driver\MatrixKeys.c: 'state': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    303    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
